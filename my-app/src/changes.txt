In app.js, I have replaced the user1 and user2 state variables with a users array that can store any number of usernames. I have also used a map function to render multiple input fields based on the length of the users array. I have added two buttons to add or remove a user from the array. I have also modified the handleChangeUser function to take an index as a parameter and update the value at that index in the users array. I have also modified the handleSubmit function to send the users array as a comma-separated string to the backend.
In server.js, I have modified the API endpoint to accept a users parameter that is a comma-separated string of usernames. I have used the split method to convert it into an array and then looped through the array to fetch the data for each user from the GitHub API. I have stored the data and the scores in two arrays and returned them as JSON.
In compare.js, I have modified the Compare component to accept a data prop that contains two arrays: users and scores. I have also used a map function to render multiple user cards based on the length of the users array. I have determined the winner by finding the maximum score in the scores array and then comparing it with each userâ€™s score.